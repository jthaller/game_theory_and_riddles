(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    127487,       2226]
NotebookOptionsPosition[    126323,       2191]
NotebookOutlinePosition[    126697,       2207]
CellTagsIndexPosition[    126654,       2204]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Jeremy Thaller\n",
 StyleBox["Game of Life Game Theory\n", "Chapter"],
 StyleBox["In life, you can buy a stock card for $50,000. As a result, each \
time a player spins the stock-number you bought, he has to pay you $10,000.  \
There are 9 possible stocks to buy, and 10 numbers to spin.   ", 
  "Subsubsection"]
}], "Title",
 CellChangeTimes->{{3.7165719747920294`*^9, 3.7165721469868526`*^9}, {
  3.7165724646491704`*^9, 
  3.7165724675178857`*^9}},ExpressionUUID->"7c3c1a7e-99a0-45ca-aa22-\
abf74364922f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"totalTurns", "=", "26.5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "number", " ", "was", " ", "averaged", " ", "from", " ", 
    "the", " ", "turns", " ", "my", " ", "brother", " ", "and", " ", "I", " ",
     "took", " ", "to", " ", "complete", " ", "the", " ", "game"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chanceOfMoneyPerSpin", "[", "stocks_", "]"}], ":=", 
   RowBox[{".1", "*", "stocks"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.716570766930764*^9, 3.716570778488715*^9}, {
  3.7165721578690095`*^9, 3.716572188536807*^9}, {3.716572320754219*^9, 
  3.7165723585755105`*^9}, {3.7165724873871737`*^9, 
  3.7165725407473865`*^9}},ExpressionUUID->"90e820e0-c0b9-4895-8dc2-\
f5b0a1a747fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Income", "[", 
    RowBox[{"stocks_", ",", "opponents_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"opponents", "*", "10000", "*", 
     RowBox[{"chanceOfMoneyPerSpin", "[", "stocks", "]"}], "*", 
     "totalTurns"}], "-", 
    RowBox[{"50000", "*", "stocks"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7165682920968246`*^9, 3.716568316021494*^9}, {
   3.716568690105817*^9, 3.716568692959081*^9}, {3.716568875466509*^9, 
   3.7165688844007616`*^9}, {3.7165689229071226`*^9, 3.716568962536463*^9}, {
   3.7165691957921224`*^9, 3.7165692005412254`*^9}, {3.716570211673704*^9, 
   3.7165702301933775`*^9}, {3.7165704234136047`*^9, 
   3.7165704375686445`*^9}, {3.7165708590805244`*^9, 3.716570890537321*^9}, {
   3.7165710273360214`*^9, 3.7165710608425655`*^9}, {3.716571207750267*^9, 
   3.7165712255533633`*^9}, {3.7165721916700373`*^9, 3.7165722136440573`*^9}, 
   3.716572369896145*^9, 3.716572522511633*^9, {3.7165725563394012`*^9, 
   3.7165725702964306`*^9}},ExpressionUUID->"0bae6826-b654-4d06-8b27-\
a52751d52d29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Income", "[", 
    RowBox[{"stocks", ",", "opponents"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"stocks", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"opponents", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7165682374751797`*^9, {3.7165682791757555`*^9, 3.716568288096874*^9}, {
   3.716568322738138*^9, 3.7165683517605343`*^9}, {3.7165698598500834`*^9, 
   3.716569896557365*^9}, 3.716570838312086*^9, {3.7165715688631415`*^9, 
   3.716571598278161*^9}, {3.7165717786574173`*^9, 3.716571893310044*^9}, {
   3.7165719248340034`*^9, 3.716571926280952*^9}, {3.716572653751322*^9, 
   3.716572673822137*^9}},ExpressionUUID->"d8d9b0ac-3d86-41ec-ade8-\
f9f8a4bc9bfc"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJx1nXk8VN//+Me+G2NfC41KUmjT6k5UVLRLIdIuSittSKjQYklayZYW2qwl
hsouW0lGZN9l35ffe7mv13ze8338+qfH49l5nDnznHNf957XOfeVmt3xrQe4
KRRKNR+FwvPX34mfwr4qBEStqlF/u5FC6TbICSxJvdR9M31R/4GN6wMaDICv
nz+4JfByIZOp8T3UJKAf+X7Gyd0Bl38xD25xVjjGmkTun9Dvpa3WxPRO8zMx
CeAlgDutf13tf7mTueubtTcrUQj50z8JSmNOvcy5bfM+ObLEkSu8lzLWVhtk
Tv3zh4bcy/PEaZuSEWaLz+FpJgHSyPvNisL8L08wS2RKVgTQ5ZC/8wtuqg2h
ZLwPW2rJSlRA3nbiy/ioE3dGhFb4ObqJMnL1nf2S0ia8GX6JwiGOrGnId6+Y
oamtxp/x4Z9+VJH7q201WDsikKHb5Ng2NaWGvID/8g6bEqEM8Hzfd9PBv/1d
HLO4c2/YEz0DD9vm59w09Qk9Ax/0zi5qnCpDz8CVG3L2VUz9Qs/Yj2rjhcap
evQMXKeo8Uv1VAt6Bp5zqYlaMdWJnoHPCe572eLWg56Bn+zs29I41YeegacZ
9Q/Wug0ywTNw/of9D6qnhpngGfjmvn6C5TbGBM/AH64faPwxNcEEz8C7i8+v
aTOgoGfgIeOjd1vcuNCzeX+HWwB9xGB7FpNlz3UWPQNv+WO07NR4PHoGLnhv
qc/J8c/oGbjq+83OL84XoWfgIZ0L9E6Of0PP2N41Pebm8kr0DPy1+IbpL87X
oGfsZ1N7Xr1VHXoGXiWny39yvAE9A5/9+yyD8rAZPQM/HJN68ebyNvSMn+vE
nazM6kDPwIf1jfuen/+DnoE/pKy7qyzWwwTPwD83tMbXW/UywbOktc89VuKE
ATP24kHpGwR6Bk65LrUzxN8NPWP71avN7vrfQs/ACdtL+rqxd9EzcPfQn7nB
/qHoGfv/c1978n0Eesb+xU0GdWKfomdsP28obV/oC/SM/ZtGXQ32f4WesZ9E
zZiGjDfoGdtnuYtOvn+HnnH85T+c5OIT0DN+btO87zqxSegZ+xnwWro+OgU9
4+fy/Xq0L/QDem6uC9wVQOciuu+rZWpUnzAAz8A/u9rNJ4TfEOAZePLmE2EG
whkEeAYuYaeraXMrlwDPwONThi0MhEsI8Az8cKaFStHG7wR4Bk7JT67dc+sn
AZ7xc8vko7tKfhHgGbjOsRWLDIRrCfAM3P2kg9xVrXoCPAOvOPtw5OvGRgI8
A599oYAle6yZAM/AXdzGP+651UqAZ+znytyw6NftBHjGfq5ZeXSVdBLgec1d
u6ZERx4i58B1waEmD/QMXFJJqbeAPxM9Ay+wq99dwF+KnoFL66es0BNmoWfg
z73XUQv469Az8O0n9Chu15rQM/BuS5UeXeF29Aw8ZK1gXYPvH/QMPCzkXGs+
fy96Bt4h9mdv1Lp+9Ax8xZX9la7XBtEzcL/hn1stcofRM/Aqx035usJj6Bn4
wvrPhiIbJtAzcE+LZakNvlPoOWKD7ilWIh8hPcmlw6r2Q8/A3w96Fpy7lo+e
ga9Qudnoco2FnoH71Tic3B3dgJ6Bn38tedLlWjt6Bp5MVOlvWNSDnoHP03yl
vzu6Hz0Dj6F56B+RG0bPwFVHt+u7XBtDz8Bv183SvzoyiZ6Bex+YUNqwiIsB
noEzfzY9KO3kZoBn4OOmxUq7o3kZ4Bn4ssyUB7V7+BngGfjJxRFKR+QEGeCZ
i/L3H0Fi4YaPL2yOBqJn4AuOOG+T8ipFz8DLjyonS3rVoWfg0jMuZT3IbkfP
wGd1HrOX9OpFz8DzjEN7zGcOoWfgdpFFLg+yx9Az8L+fTZ0WUhjgGXipdoih
pBc3AzwDf2ypczX+Oy8DPAM/dj0nz3ymAHoGvizJVnzkrBB6Bi7YOLzlQbYI
egZeKel/Z6W8OHoGviMsqOP4Qgn0bBP/1Y9uIkxY3T2XvuVQCHoGLrTzJbN1
zQ/0DFw898REy5pm9Ax847u1N46d7kHPwGke3x60rBlCz8CrNts9t5ObQM/A
C6kuVsdOczHAM3C9v26DWta86Bl4UDXf0ZY1AugZeP+XjSej5gmjZ+AWsYHn
7OTE0DNwy/WOTCpFAj0DF02TMDp2moaegafrxmcXtEiiZ+AnonZu0LKWRs8f
Dz9SMAkQJTzqF5UZ7nuEnoHXGNVqM/mr0DPwtTOzV6fzd6Bn4OLfzZZQ+QbQ
M/AR2WWFafzj6Bn46ZcBuks8uRjgGfgh02vj4nx86Bn4nq5L2U1egugZuPmt
UwFp/KLoGcepc8Q6+CoVPQN/fHi+9BJPGnoGrrD0+Ui4kRR6Bh4gpFEjzieD
noFTK0M/n/8ii56B+z5XfN7kJY+elVQcov/+fj/kzvXdn/8EPQO3UvA1zd/3
Gz0DT2eIf87b142egZcOmte+ujOMnoH3ft/klrePwgDPwF11+sU+XuRFz8D5
fEMevrojiJ6B325coRUeJ4qegYuGdVvl7ZNAz8A3Fa6ONHSSRM/Ag0aD2lMv
SqNn9DCrWW/xdVn0DFx5x9Lzr+7Io2fgez18M2aHK6Jn4E9f/RIMj1NGz6n/
+JcgmlfunAiMjUDPwI1ua3gu/lyHnoHv6k5uWvS5Fz0DD5C38d08cxw9A98f
xh2y6DM3egbuGb+jbfUZAfQM/FFOzIrNM0XRM3Drv+Zz3FEJ9AzcweWp06LP
kugZuDN3iUKqsgx6Bu7tN5q5+owcegYeKEt3yC1UQM/Aw8JMZTbPVEbPwF/N
cU4rd52GnoHv2V38Lu6oKnpuz+S1ZSXSiIl9iwRuaEWjZ+A6Asz3T+iN6Bn4
0ON9Qk/oA+gZuPmyQ4t6EqfQM/BK+4TXYXQ+9AzcTz8pK8dRGD0DX8qfUtWd
SEXPwAeOWJ8TdZdEz8C/bt7jGUaXQc/AI5bY3FqYK4eegZ+fZns/x1ERPQPf
wrc3ykpSBT0Dn92x93V34nT0DNz9yBvrTG019Ay8o0p3n6i7OnpW/GeeSxI0
Hyma97MY9Axc0XV3j6hXM3oGHmgqPlfUawg9AxeNS/qTE8HFAM/AzRYdzhXx
EkDPwINS5SPMDoqhZ+BtT/an5UTQ0DNw37/ihn2QNHoGPk9TJkTESw49Ay90
6OSNPaOInoEfe/3lhNlBFfQMXHDU7I+zlip6Bv5D6UNUToQaegYes3KWlYLy
DPQM/LxNoKR9EB09GzuXdUxNSREzXvcous16gZ6B8w70z3JpbEXPwLXGk82c
G0fQM/D2tA9GCg486Bk4c0qx7myjEHoGbqr60cB+vgR6Bp7IdBBXcJBCz8DV
9ir/yo6RRc/A/bgKXpxtVEDPwAeeXDivoa6CnoHrPLlDt5+vip6B7z/R6ZtR
qIaegd9jrOmTd5iBnoEX0x7tdhLWQM/A+ev6M7JjZjKm+1+N2hDwzWDFD/ef
dJNeA/5xIc80ZjIT+LDBtD5H1qDB5w+G0uquccjjYz6IJjmOGQxPNhE3B4KR
J1+bK/XXgyNB9J003aR+k6icLph1jNWFnFnk5Z5yL5qA9rIrx0LpJtyExMjc
7C7f59ge+EJlLouelk9E4PLoKlbiCHLRS0pup+4WYz+ne3Ln/v17vrzv+isy
OxH7Ab7KrnvWe5kS7Ad4gcpled9zVdhPaVRIiiOLnzhs9U7rGZ2J/QC3W/w7
YmxxBfYD3Mimz6JEuwH70dl9aG0AXYg4f/Rpi1vjZ+wHuLdw8fSVFjXYD/DI
+dEav6a1YT83xReXJTqKEH7nH0SZR+diP8C3/akxTV9Rj/0Ap7jPPdcv0I39
dPwTx8SIsOu37LQPfcV+gB/6+UPEtrAJ+wGu1+Jlc57Sh/2s/2f+UAmLggwq
d1AJ9gPc+VNRLmUPe/zf/pnvNOJ32fJjjv1l2B749djsq0+6OrE95JNlRSaJ
O5c/4rzC/HCHTHbz1DvMF8G8DV8n88y3/3o69A/8ZGaa4Y3bpUzgMJ/Dqh7d
uludxTz7qSzc0VKNgPYuKwOUH9fxYt4V+FuutMGIGL4MiD/QT1B+nLSqaxqO
E/KHYY8s758ej8TPhevl9eGL8zX132B7zIPJJB6+73+cCf3D9eLkV7fNVP0x
+sH8WKWRKUP4CQHt4bo4vbtAqNP3PbaHvMRDXx/Vr/xv0T9wq+7uMj3hfGwP
6+vUZyfvX7j2AdsDN9vY0rg7+hu2h3Vi9z5tH2mvTGwP/KRqxd6H2SxsD+sd
3lNq69rXZGN74BtG67uOna7F9vDcLu0hw5vJX4DtgVs3sF5S+RqxPT7f5nja
FuwrxvbAj38ts399pwXbw3OUYvFk2pLPpch180JzEx2liO66+VpGCRWYzwGu
9Ig72KPlmQHMH+AEvayuq4LOAA7xtmPEWPzhTw0GjAfm8+fXN0R+ThXiPIT5
Py/oSN7WRkGcbzB/XGYnpvsNROP8gf7jmxwqzzX+xHwUjIepatQW8liD8TlV
c7oTq9qgeJHtYpMACtEyuEN4+rFwAvi8f+5vf8XbpmvKgeeSiL68vJ1mAZ8N
xC8pBAbQewza7n1z0lZ7wQR+VLdlepJjn8F+Yztpc9toJvST25j4kpU4YHC4
yODM0uPvkXuZbc+im4wabM799OHorhjkjKSeGse/7s9hOr/zHePc0TN8brxj
31vPk37p8Lng53Wm2PR7l2OZ376FZSXGqhHQ/lriV9FLmwUyoH3qP/dDKeK3
29dtdqa5BLQHvsJ4R/P5NA0GeIb7QpPgZpuI7Cz04/d4YlMAnY9wOdy3S6Q6
E687iP8mvVXKMfRibN+2taAq0VGAqLAO1zCdysX2EE/OMjIaUpk56AHGT/tl
5l1t8RnjG8SZyD1LeTaNuKGHWfe9llIowwZh68cSzT7ew/YwTwStbh8WkzqM
7eu5Z2wzCRg36KblSH9pPo/tIc64C0fa89+zMYD2ME8srszbVRFwDX8XiDP6
C+63CpVfwPYwf75dtX2cuzEUrzvMP99WT7a5lUIICi+5XpXYajB5K/siK5GL
cGrZ3sJa+QH7B//db9Yot9Zdxf7B/2ST9DWp2c+wHyujYCEKhZfQWbzpF9/l
XOwHfhdVjZonBztvYz/wuwh9uahau/0N9vN+eH8w3YSfkB1fWn/zTSn2A/dl
4xMPEixa7xhAe5j/r/XKPxwYzsc4j/tNElazXp5Px/kJ8/aS6QB1l6UQzk+4
fiXzrAwuNebi9Qvz0+6ysvnrGTPx+Q3mySrP6dFcHwVwHxDaP5p5voJy7bkB
fC70P9o5rUWXMZMBnwvXaeXgnyTX0Cd4XcN16vdUdjJ0+W3keJ32Bz1qX3kQ
4wP8jqkNFxoV8+8gh9/l2J1wrRWHIpGDZw/9qw1tLbHI5WMXzDAJECTyOxO+
bkx4h78LzPN4pzelprJM5sYjE9pclDqMnzvHfUtb3TKYP+47XKZQejE+9J+V
nmdb8hM5tH85P3tOq1sJU/By5VEKZQzbp1nHNQhY1yOH9vP2Gjv8MqhkPlxA
16JQuPF3pLhvfWtT0ooc2pvnNpS3uNUy42daqlLc+bG92paxdJZ6N3JoL2MX
NVRX08gsUAiQoVBEsP1qu8JoAes+5ND+2+gB+V8GbcwG0VxhijsV2x84FXpj
wd1B5iTH+QFP8vwAtId+7gbOXPojtAvbA9ck98F9zj0YnTJgnzeIumNo6Ssy
gRzaX6vb9rHxVR9Ttm/xwJSbLLbfXyb8hKVOyQAO7dvmxRfW1Qwwwx1K/0yl
y2P7AdapoJ50rgzg0H79BenqGuowc94/818R23s3VF0VsObJAA7tX2Sf7qoy
GGW+txFqnDJQwfZynWsuqIzyZgCH9qLS3yd/Hh9nrv0ZWTPlNp19TmMg7tiC
u/wZwKG9g+0i6o/QSeYRTdXOqRr2uYglk3J2JgsFM4BD+/3ledS2Q5QMmLcQ
H8JnTU02WL3F+Qk8s7jPrMEqE+ch8CSxw9PMffNxvuG+v0bXYL1VKc4r4HmG
MdXK/eU4f4CvtrPL2uHLwvkA3IYQ37mO9hvnA/C75H49/O7Ay/bkrHKPacDf
Hbj0sai3yv1N+PsC33TJY2aKQSv+jsD9/Gzu7/Btx98LeP6DFeK95Z34uwD3
/C7KWEfrRv94DsF67LzMkh6MD/Bc7XLkwM0DoRfQM3CdGUFe+0N90TPwlzmj
ar5JQegZeI2bFtf+0AfoGbiz0jynx4ZP0DPwP2ezanySItEz8OjSPZuctWLQ
M/BJ7X/368Ez8FvXb83bLPUKPQNP75Xa9NjwDXoGHqL62zto4i16Bm5r9jLN
JykePQOffdFl0P1EInoG/vuZ0TxnrWT0DPzqD4mDjo0p6Bnu73X9++93l8QS
4Bl4YYjHxT8lHwnwDPyWZeuOU9ZZBHgG/sHev7OrpJAAz8CHUh+uXhRRSoBn
4Dc+O4mfsi4nwDNwmQKjytdylQR4Bp5I7teDZ+BRjoP6slm/CfAM/OiJ39MW
RdQR4Bn44jN5vNvdGwjwjOcEzsW3nbRuIsAz8KyLj4v9l7UQ4Bn4bfdria/l
2gjwDHyv58mHRf3tBHiG9ZrHhg19Tb7p6Bn4WCXrc6NvEXoGriAoJNgR8wM9
A3+nHqnd6FuDnoE/exyqeTypHj0DH9FyTG2PaUbPwA1Tlm06fL8dPQMPJvfr
wTPwgVb796/TetAz7u+/LuE5ntSHnoGvdNY31X49gJ6BN6wMDW6PGULPwH14
+X8/ezKCnoHr5TtoHr4/hp6B//IvOzkzcAI9wzrXSPxtgb1cDnoGnrXwQ+MR
uQr0DHzBm5t6t2h16Bk4d47BySNyLegZ+Pfq7jeGKl3oGfi30eLhm7Re9Izn
AbyfyV+UHkDPwJ+S+/XgGbjEo90W5opj6Bn4qdkLXAxVJtEz8K6ffBvlb1MY
4Bl4xPRe1k0aNwM8Azc/UH2UL5CHAZ6Bi7zIG7sgzccAz7jv353o23uHnwGe
IT+wf3kN9cTCYvSM+9SrPE87LfyNnoFbV8vvjTFrQc/ALdLLZzot7EbPwK9Q
1VT8GP3oGXiczVGpGLNh9Az826sEoc+W4+gZOBe5Xw+egcvN1hibWMbNAM/A
52xeP+jL4GWAZ+AGLsd7FIz50TPw7WFBHU/NBNEz8EM5Kc2LdgijZ+AXu6vr
PlmKomfggfK81VvsxNEz5FVijh9ImWv9DT0Dj62dM6hl3YCegXuKRNzK8O1C
z8Dj7t8I0rLuR8/AH74y2Xv29Ah6Bu7zmW9ehu8kegae3GE74VXCxQDPwHXJ
/XrwDPwpl0pecQs/egauJHpB5+xpIfQMPED2Z7ASRRQ9A+dXWzLB9BVHz8A/
3snTfecrgZ6BD98fafAqoaFn4AvDZodYyEmhZ8hHtUW027V4VaBn4Fu9Spyb
vVrQM+6PP5S1cdzfi56B85w14m72GkbPwN9sOhll+3QSPQN/Lb2Z7rifmwGe
gXtyNQ9onuFDz5g3I/frwTPwxSzpexHBIugZuFDOC3vbp+LoGfjx3WqPxask
0DNwVnEHv+N+SfSM+/7rko/nd0ihZ/xeH69UaJ6RQc/AVRZuYlybkEXPkMfT
qTghGhlXhZ6BD812GQmP60DPwNvfWg6OeAygZ+C7t4wdD48bR8/Am5wLT2t0
cjHAM/Bp6x69GfHgQ8/Ad8g6dhXKC6Fn4DfJ/XrwDHzfbv6Fy9Ul0DPwScax
rRqdNPQM/L5muRM1WQo9A19EW3VrxEMGPQMvGY6KrTeVQ8/AHX+LFRTKK6Bn
4EI5Z9qS6hXRM+RFF/OPV746+hs9A9948NbKV0e70TPwS7lhN7yfDKNn4Oay
P7vijlIY4Bn4n+za4PvevOgZ+PVzbau8nwiiZ+DTtfqaTqSKomfgVuR+PXgG
rrnO4wH9nCR6Bt4f6n38vrc0egbOHPYxlAiSRc/A/bbckvN+Io+egVs8D2wf
i1NEz8Bn8ISkn0hVRs/4fS0fBjbnTkPPsL+8SzX9lZh7HXoGrppsNynq3oue
gUv9bqRLMcfQM3Buz/goUXdu9Ax8XG4wmaoqgJ5x//3FkgJJpgh6Bj4YmvpH
WEcCPQPvJ/frwTPw3gWT3OLF0ugZeOfEYz+qqhx6Bt6abSBLc1JAz8Ab/X+H
SjKV0DPwWsvLmtIS09Az8D+S/j+FdVTRM36u897HIhZq6Bn3l5d5eB4NakDP
wHuFFqfbB/WjZ+DRg3NSQ6sn0TPwlz23rOyDeNEzcIHDwizPFCH0DNyu2nNX
aLU4egZu/XyqvYpLEj0D9yH368Ez8BTV8/ZDM+XQM/AGy6RnnikK6BnPJ9zt
b6FtVEbPwFeV6s4OrZ6GnoEneCctCE5WRc/AN9DNy6q41NEz8NqM/pMzNsxA
z5BvvL99za7cmCb0DDzDUsg9J2YQPQN/wJ+sGTxJYYBn4Dv+ek7LieFHz8Al
kqdNjGwVRc/ADwoe6bszKYGegWfGr26JK5NCz8BVyf168AzcVWyw5PclBfQM
vDKlKGtkqzJ6Br7k4LMPkrOno2fg668zKu5MqqJn4C42cVvVj6ijZ+DRi5QK
48rYPq9UKxlSKP0GS13nPOeVz8Q8BuSf4+mfri81LsM8xnbP+HFHVq+B3CFj
VdfiX5jHgH0HhfYO9+sSjZjHoM8xTWQl9hgstdqf0FXcjnkMUTLP7Gz4xTwp
qAfzGP1FjcdNAroNHiW8iue9MYB5jBAy3zWXI394mRy/eZhhsPT7fsxj2JPj
NxM4WmtKDGMeYxs5ftH8IzeDJMcxjwHjzxsINTstT8E8Hoz/VPwgf5QpN+br
xMjxX1Zb6lQVw4v5N4N1KVYmAcMGh7RWxCneeIc+Ic/87X27qFfnF/Qp0blF
NslxyCBLdOGnDeYl6BP2ZViHJ9druP5En78D2oroJoMGospS2opHa9FnNplv
X/lxh8uKV03o87X+lesB9AEDAfl1V8/5dqDP7fB+Ckf+bSU5fqfKp92/UpvQ
50xy/FXTpCp749vRpzg5fvubwYb+4d3oc4gcv27b6IXExD7MC8H4M8MXy7bK
DmFeKIcc/7RkE0nNT6OYF3pFjn/NnIVOZz9MYl5o7JX52QD6hAGrVJFhu+Uq
eoZ9KP43RgpWc6LQc8GOP/MplHGDolzXkANO79Az7GcJD62ZfTwxAz0/HLva
6sgaNTh2XCBQVqYAPV8h9y9kmxne0vbf0LPDE9WIv881PL5uvb5shIWeJci8
lsW8/+bfRsjxlxerla2XZaLnOnL851OJL7Oi8tFzHjl+7XVi9UvyvqHnd+T4
l0b8sKf1VqFnGP+ylKkVEhr16NmTHL/D7tXX9I60oOej5PiXJSy4e3xNF3q2
Eh3NdmRRiGXnb8RvYjzHeAv7d88/B1DiXidivDWyyYqkm1CI06GlrH0uaXhf
g33A3dm1PhXT0vF52GK/Bk+S45TBQ/ULys68H3DdYUDuBy198/i2geZbXN/N
Fk5LpZtMGqQW6D7KXhiA6+gmMq/1giP/tpscv0SDtviJfb8wX1FEjt/4cmPX
x88szFcYkuO3fWFg/H2gAvNCMH4zuxWKSYPfMC8E49fZmJSbdbMI80IEOX73
zmWb44syMS80ixz/8GoVIvHyI8wLvWfmbA+g8xDaN23cgz99RM+w79nSXc+/
ZiwfPYdL3dE1CeAmvrZ7zJuxsAw9w/7p3JrAnxH2FejZ5+Be8b//Xdgk40eW
Hws9w/7aewN/s3jXX+j5ZIp2e6IjF7H4E88qB6IaPRuReS1/jvxbMjn+mXMv
1F6O70bP2rDvX6HYzbOzBz0/Icd/flb9Q5fYHvQM4x9R+NZck9SDnmH8sa86
i5ee7UHPMP67LfMtvFu60fMJcvwJn+9f+iLejZ7lz9ytTXTkI+7PXxG4ekE2
eob93zSDdG+FTeXomZKzL82RxUuorr3ruyOuBj3DPjIjeklOjncDem5R1HlA
N+El3jTo9i+Z24KeYb/y9pFLVn5L29FzseO4MyuRhyhbqMiVFdeJnsPJvFYk
R/5Nlhz/6hp7t1kSo+jZlxy/xOaL+ytSx9DzVPa/41fen9h8QWUCPcP4LZUU
hCT1JtEzjL/0TGTO/dFJ9Azjdz1lMVPWeQo9F5Hjt5FepO75dAo9n9U8eIyV
KECohhg3pXgWoWfYHxe8KupzO6waPe+5qLchgC5A6Bfv6DeUbkLPsM/eYRUV
YVDRgZ7XFk3OMgngJ5wCGKv4TXrQM+z/hir8NK752Yee56nn81Io/ASv0b2e
59MG0TOFzGtROPJvp8nx65jE3mxK4MLntFZy/MP1xxzMaTz4nGZNjn9PsdG9
9LW8+JwG498jPl9G3ZwPn9Ng/KOPtH9fMuDH5zQYv54bMVrKLYDPw9rk+Lnf
HtqnFiaAz29lvxaOTU0JEYnzgk2n09j5N2OBB0f+Pmeq2fwyi+dcPXsdrcNV
kegoROydqFG33tKBnuEcQsH16wasoF70HHmlMN6RJUhc07P36L4wiJ5hP/28
66l9w7Kj6Nmv/J4/3USQeOQYVdd7YAI97yHzWjoc+bdScvzp6lHWKfvY+bd1
5PhbQ0OjCSNB9PyBHP/rY3GrMiaF0DOMX+JWicbyQBH0DOMX5RKyiuMSQ88w
/sjP22sV14ujZ19y/N9/xie4O1DRs24AzzW6iSgxYqc8VLmUnX+L/nBkcGpK
hCj02Wac/qSZvb5rLNrPShQhjGQSZi9f14Oe4fyk+gEiNvjjIHrm1n/ICKCL
EKGlAVmVcWPo+exe7teOLGHieQ9/uuAcCq472v45/ytMPMyvOPLInJsjXyFK
WHLk33TI8W8afzjXj8bOv0WR4/9hWfx7jrMYelYgxz8lKt+QmUhFzzD+OoFl
SnNaJNAzjJ+q13v0Ty0NPcP4Rb0W7n+TI4meW8nxf6dw8To9ZOc5b60tlTYJ
ECdW3Q0PC7Zj5994nfSv0E3EidPzRnPP57WjZ5d7j3umpsSISq3R9OwD/egZ
zpe6EEOKW5tG0bNth/3XREcxwirF2qvOiYLru3/Pi4oRsvTtG+8Y87DXdwZL
XjiyRIkjv/fYMUb5ONbR4sQNjvzbTXL81d+DxvakU9EzDzn+Rl/3G8I72Pk3
Z3L8Md+ZRnZJkugZxr/M2DcikV8aPcP479XXPBMwlEHPMP4vT9N27nCQRc/r
yPGnB82KDfWQQ89nLxUXJzpKEGkHpDWerWHn3/6d5xKEbGnYhsV9f9h5oejF
BgF0CYInJ8x2z8ch9GxCnsstUIq7JkadYueT/zkvRCUOCZ18ulOYBz3/e26Q
Slwxf/JT7RA/eo7u49MPoFMJ/YGG3Y2PhP5P/s2SI/8G40/cubYxZDE7/6ZD
jp/VGvLcrUsKPbeR4y+OPCO3L1AGPcP4A65VaRlqyKHnNHL86ncKm6dHyqNn
PXL87nnGG0aoiug5ihz/s9lm5kWHldBz1I8lciYBNOK3248R/t3s/Nu/vyON
qH4f0TQsxs6/KXA99qKb/LXerW4camONoucy8jyz/wW9Cw0PuDBfcWMOb//U
lARxYpd3bkEEH3r+93eXILqudR2M8xJCz1zb7e1YiX/9jsJHt11niP2f/Fsf
R/4Nxu9qlLnR4wY7/2ZDjv/bujfZ/Vdl2XGDHP/wqTlt+47Lo2cYf1uOdnyR
oSJ6hvE/X/tBQ59PmZ2vIMe/pLN01aN3Kux9KHL8t1NPT02aTUfP33RDrVmJ
ksRBY2+3/82//Xs9ShLSH+wsrI3Z+TdjS76CREdJYu7AnFvOoxPomfuf61SS
WNEqprf6NQ87n+x5dFkAXZJwfXa/nbFSED2f/ef6pRGWH5b3L4sURc86cSUx
jiwacfjWcFTwSYn/k3+7zpF/g/Gv0V0Vf7RBFj3D+AuichuOqLHzbzB+VcOa
1P0blNAzjN9IyG2FlZ0KO59Mjn/BcMy+zQeno2dncvzDV+fdC3vBznPC+FfG
mG6/e5+d5+T24490ZEkR6vHWEZke7PzbR/J8YIPoYoUPVuz8m3OCg6RJgBRR
w6cv5eHHzr/B+eFG89aW0M987Hxydak73USKuD4SJ5ZULoye/72+pIjszmuX
szOp6NlGcOmfqSlJouje8vDDRpL/J/82nSP/BuMXnvZeacdydv4Nzjdm8tRx
1bxXQs9nyfGvkwy6dWDWNPQM4y+kH7Y7TbDzbzD+6u35m+P3qaFnGP+Oe30B
Jy+pM8AbnHuUdm3b9dT+Bj4/nyLXL4tcj49rK7xGz7DeObt46cWQc5noGdZH
skEDgnzrirCfEvL5PGKW0RbxPUzsB57nveqOMAxvlmA/8Py/h36rNl6lCvuZ
Tz5/zry9OdLrFfvcAjyvFmkmGb2v+Yn9wPOtefqW0L4NDdjPDfL5yvxi3AVX
d/a+PDyP3dDnjgyRr8V+4PnNvYNVKHq9DftpJ58fQl4v1Fj2jP3cC88bulUx
GtsZjdgPPJ+UiS6YlNzHXg+akPfHqob3XwdK2M91cD/94bbpKdW+FfuB+++R
GS53Qi/3YT9PyfivqsBweTPKfm6B+8WFGYOz8wM6sT03GcdeRdffTvRn338h
7t3aZ7bj0y/2OOEcYOX+EI29JbmY74I8ZMdl+SKqUAVyOH9rfCb4ru7xIszz
QH715uzwxQ8XCOB5Qi8yjyr2klh+9zAX5jMhDzn7tshWq7j32D+c47UrHFK7
GvIR80WQJ0ldF9LCs+c+jh/W9aN1q8KOL0tCbktev72VR5adfN+A60q4rjcu
Kf1o5jsD4xIPef06BD8fp07SkcP1Xi5ybd3yVRoYryC/t8y1cSdLNhLHCXmq
249nVIanh+F4IK+yPWyOFJM7BfkbMg/5QkX2XsYD9jnhWjKf6Wo69Pnl2VTk
jmQ+zcReyi8o6DXyR2RermE4deXFp0+Ra5J5IeJKofDC+Ln4ubvI/JLd1lbl
zBWByGH9zl2pNeNV1yfkkK94lfzE6kfpZ+SwDr22Wv/sTKIAOay7F6vFvTKj
FyKHfPh9HcmLUTFfcJyD5PyZ563eod+Zg1yDzJMbUa8lFPpl4fl/2F/wFDdW
DF7inQ7vUQI3rFbeq6TzHesXAR/vL0ienVOD9YuA//RaJaik04j1i4Dr+cvG
q11sw/pFwIMedtnMzvmD9YuA92+r95Lz6cX6RcDDdxWxFHUGsH4R8K02H3Sn
lQ9h/SLgk/ufXlW7OIr1i4DH2Qf+oqtPYP0i4Huc3BbMzpnC+kXAeT8kfJZZ
wq67BfsFFyUv/bGaOI/egDMGbxYZf8xFb8DLXF8fGDQtQ2/APTzu7TP++BO9
AZc3zNAxlf2N3oD3f06YP2haj96AZ699Pi/Uqwm9AX+c81jb+GMregN+aX3g
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
z1mzm7a/lF3nk7xfy+zz7zC8mUH8P5pfX3s=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1: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
Be+nOzTOmf388fC2zHtrIPxUZj9cPvlKeCI8QM+CL87tz85NOrhF5vhB+/t8
vUPmuEI+8PDcsZXW7eOym7Qmad5l06TnTqZdxjU96B9GNhY+U7oUvhw+C14o
HyOzfemttYv8XPrHMsdgWufDeNZ45OfBy5CPgc+Qfs4cZymmWAQPhlvDdyUb
3VJ7Cu5XdAx1BzwEbgPPhHvKD9CegLsnm36dxir3PrqX/mzkjWU3tR+jx+tl
6Un6a5C/hnyj9C78KVw789qSL/gi8ofp/+D4LvnHBfvJLxQdp/yOfCbHfxUc
X1TJ7EtqPTVM+7d62m/ad0czHq2lC9Kx1rrWxv7Ir8/ti1XMbfeORT6e46qc
21fzBU/gXLWCr9Fz8vQs+UM1tNcz+wRaVwfydzuQPwmXKHp969ojkZeJjilv
o5+SeZ4VBzZNe/+kgudf60DjqLlVzKX5VXxaimsnR+9hrecKHL+S2c7uFxyD
aU+Xkx4O/4V5hUb043nvvwuO796WPdczirb/0l11OX42sz3dl+tXZ17PZYJ1
ot6lbvDYalzld7TP7MuW5bhD5vhqW9rz/+197n9E2u+H0x/N+cq0g2mzeI+N
0i25fdrDM4/PL/zNm7q+6HyB9uZByP9Qnzme1NxrDVQM9oXkjzQJXjdaP9JL
0pe6p3RmnbSupGbapHeuSuuR2e+tErwuqqW1Ib/9iMxr5qbgsV+ce29rTBrm
Xl+65pP0zNrp/vJLa2UeK8nrJF15SObfr99ePY1VxfQeeh+tvwdz249hwXNS
K+mE5mmfy3+8uuj3WaqHZY5fNMcd0/0/KtheyCfUuCi30yDzGpiXex1K7+qd
GqSxUjJI9uq+zE2sHJBspHSI8jryt1qn8dFa15o/JPjd26Q1IJ3XLbPeUywv
XpbbvsnOdUpr+4S07mU7ZeNisOzEJJcubJr2gmxrk7Q+pftlz6T/5btq7G+k
fyw9Y35uW6dnyZ6WTPfRGGpsdX/ZeuUblL+4EHmrxMpjaPw6pjWq8euU1o/m
okt6B/nUndO8x8TV07NOS++sudV+qJTmuW3aF7p/uzRHGk/pkUdzs8Z1Ynr/
rmmsmjEvB9H3T2PQJf0Wjbn2nmJI/XY9d3Cy9Roj+fvqZS97FewXnJzG7Szu
2Yj+Bq276Nh+pXS11jzyVfCQ4JhRtndwsJ5/LnfspBiqGrJ2RV9/md49OuZ8
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
DveOroOekbsmp/xVbflrwfVWrcPG0d9AyGY9E12zl9/yDnxb0b+3NTyzaL2k
PK3qazOkg6Nrk/IrGkV/MyH7+E3yYeQ/Lw2OEeSPHRddO5cdbBhdO5TtG5X2
mvbcd1y/oWCdNjbtfemAW/WOygHIFvG304teP1Wja6jyZz5L9lO1qTa0u4se
H8XzypMopleuT7ka5ZCUt1GOvr58H+R3Fb2/ZufOXaoOWCW6FisfSflq5een
0rdCPqPofVo9ui4rX0t5G9Un6nDPSdF5XsUpd6f3UezzOucWFLxmDouuccqX
m5nGWT7znUknK06U/VLuTLVF2S/FGoo5lNNT7kp5vLvS+yuGUr5Oeaya8ouS
PlcseXvSt4olj4iuv8pXnJF+i2Ku14JjEO2RGtH17KppDGUTZRsPja5ty8f7
NbjWoFigcnTtXD7h09HffMj/eTL6uw35S4qda6R1OD3No+I71ar0/ckdueuV
0tvS39O4ZlrRcV+t6Fq+/MnDo2vM8p8fCf4+QbZJ/ptyV69wvmX6W+mco6Pr
/fL9dkWvJ+UMVQfZnfzGY4PzEVoP+jZGvpZ8rvHRuX75wE2jv6+Sz6NvNjTG
q2VvabOL/kboXvofk86sHf3dhvzYtcExoPSzvmfQ3GkO9Z2N8l+qES8L/m5B
eu/Q4Nyj1tLjwd88SAeuCc7Py3Y8Fxw/ao/Lv5Gfo2/Gvg3+hkR6Y11wvCmd
UCf6+w/53tLNvySfQT6G8vnK6x8T/V2IfOZromtjyu3Ujf4OQH711LQXVCOW
npDdVx783+DvNGQr9b1WvbRnZyS9oVrzo8HfhMjOHhv9LYJ8S/lyyt8pt1Qv
+nsF+efto8dU327Vj/7+QP5wx+jvveSHPBb8bcl/NrTotaSc+XLaDQXrUvky
3xXsp3aK/s5Mfou+j/q6YB+6Q/R3Y/Ix3ov2//Q9xv8BEjjKDg==
            "]], 
           Polygon3DBox[CompressedData["
1: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
2PA/10OLdw==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt1ge8juUbB/Bz3nOOopQGyirtNPTXEEJmpaTsrTJShDIaVkL0T1GZhVSE
kgaFkh1lK8rKaljZiRL6Xp/n/Xxczn19n9/znvM+477v4o90rN0hlZGRsVjl
qK+yMzIagoGZGRm36htmZWSUYa+x1wXe0A9VNdkUdr5xD7kZfn7DnmYTnVuX
dWGr2EtsFmvD+rOybCgb6vNG6EeqRawbe1+ujlxntpB1ZRPYeFVa/mv2MHtN
X1HuIbmb2ctsCmvMBrLSbDAb4pzB+iHqS9aADZB7UZVw7HY2JD7P+DWZ19Vs
1oi9JHObz2vE8rJbWGFj/zJu998vbB47KHdAPewzFrAn2Tv6WnId5R5i69hf
8T3YVraDfcX2slHsWf0W9RnbwQbHvZCrw75gP7H+bB6ry2aw9fE92HxWm33O
fmT92FxWn81mP7NBbAmrx2ayDWwAW8C2smnsFzaEzWYN2Ry2lb3KvmNV2Bh2
rvETbJKfjdgi9pvcG2wla8IWs51sGFvNfmML2GH2NlvGhrH8+t2qgL67/ne1
UO4IGye3nDdm37Df2VC2io1gBfR7VEF9T30ztVxuHxst9xP/lc1nh9hYtpQ1
ZyvYfjaGrWen1Vrjo/xy43zu5SNym/Un5aY4tpP/zD5l29k21VBuNH9L/ejY
CMeqsqbGS4x3yQx37hrHW7JfWY6axvann/14B9Y6NoxXdm4r49+Mc6npcgcc
n8Pa6IfHNVWl5J5nEx3/W3+xTB/9g2q63DrW17E5/GH2IzvGJrBt8XtZQf1x
dZG+t3543BP1Q/r9rOR3vKkfpdbFcVaFzTNuazzSudV8XhvHK7PR7Bzj9myi
nw3Y12yL3CvsWzZWjVE/OTbSsWo+b67xo8Yj5KrKtXZ8I3uXfc/WqJpyLdha
dlT/ntyW9Psa7+336Tmqotw4/dtqPRvFqrP5xo8Zj3Judec+6ni59DUflpN8
x/iueYwz/fxf/N1yuWXuVhP0i53bhX3seLbc3+zaeDdZSuYMdkp/o9rEcrEc
9o++RLyvLIsdU7v0F6WSefewz8sld1J/g9oYc7HMX2qnvqD6hh2MuUfuuP6a
eNdZpsyZ7LS+pNrMzmC5YzKXvynef8Mzs5P5r77+ad/jGdVN5iyVkisV77pc
Hplz1W36RpnJmlDW8XPYrawBM8wow47G+8oKqEXsENvDVseCoj7yYwP7g32v
T6mP2SY2gz2gf97nnaEG6v9UO2JNUXPl9sodYdv156k5bA87xLbGPKRms13s
MNumz6e+ZrvZAbZRn0fNZL+y/WyDPreawX5h01gZfQt/x0PqKV96H/uBZalP
5DbL7WVr9JlqKtvIdrNV+tPOO6XaOncnW8r+0U+SWyu3iy1jJ9hkto6dx25n
zeIasDtYyvnH2NXxDrO42H+rPfpC6lv0p9xxtlt/sVrCjrCLWDHjTj6vmL6v
/v/qrJj74nfEu5mdvFvvOG8BW6jezEm+x8pUso7FejY+nlv2B8sb77X6nJVi
PYzHyNzrdz0X7wrrzkazGrGWpdfGualkjoy5cqxzv2D3sGf1V8nVkPs83q9U
8jzGc3lpTnI/yrJHYk1V+dksVpu9oL/JuXXSc/EnqWR+iHniLbnprBJ7Mp7d
WB/1r8q+olan9wTl5Q4a/5xK7lncuw/ZIJmXVUfHDsR1zE72IF1SyZwbc2/v
9HXZx4qqIqoT6xnrinN6x7NlfDZbKtc3lexdYg8zgLWO55zlVwvlT8lm8r/0
V6WSNSjWohNy+/XF1DJ2jJ1kB/WXqhUx76fXhdapZD8T+5rnfNa/8fezS9Ry
ueNyp9ghfXG1kv0Tax47rL9MrWInspJN4JFYA9Vq7b9sZqwr+j4+vyQbkJ1c
vy3p5yKejydyknt5Vyq5Z3HvOrMN7K34DvrzYn+hvyO9lgzPSdbNWD8vY7VS
6WfX73iQVWVjYy5gHdhk9i17Pt7JzOR6x3Wvzsax+awT+5AVZ/ezDqwoe4Bd
ymqy9qwIq8UuZ3VYF3Y5q8cuYfexx1lhdj+7ktVj3diVrAGrxt5m81hH9gEr
n94DjMhJ1rlY765gdVlXuSvk6mclz0Y/Np1NU2Xli7F7WVt9IbmacstY/3j3
4pqyPuxeNol9F+8M+4zViL1AzA8xr7NP2Uo2MOY+1pr1Y/ew92POYF3ZJ+wu
Nj7WmLhnbGpWsl+OffOa7GR/XMHft9z4ReMv5FrKveD4fWwyWxprCpvGlrBn
2WRWn3Vj97OP4tljPdlMVotNjWeP9WKz2Ao2IOZm1or1ZQ+wj+N5jPePfckW
s2fYJFaPdWXfsT7sU9aC9WJFWQ3WJvZI7D6Wn1Vgj7GzWSV2ISvPHmVnsTvZ
9lgzU8keM/aaw/UlVHPWW3+DXAu5G1l79gorx9qxl1TJ2KfFnkLldf3Olysn
15LnlqsQ6zPrzIayKuwpdi1rxnqx61lzdh1ryfqxm1lLtol9wDayC9Tr+htU
OzYonim5x+U2sw/ZJnZh7NP116tWrL/+FrlWctvYrFSyH499+VB9PlWaNdHn
kisX34s9wV5ld7D2bEJ8t3i/Y97VP64vqO6MuYGdI1eFF2JVWeP4W9hd7E72
JvuKPcbeYxfEPMFaszysIivAKrJ2LC+rHNc59jr6wbEv0beNTHay7xvlmr/D
3lVFWHXWPO6lc+9h17CmrCe7jjVjFbKTfenInGQPGXvJq1kT1kOuhFxTdjGr
whrGtWfV2VWsMevOrmVN2C1sELs5/TyM0xdW1VjTuM5ydzv2H54ECtA=
            "]], 
           
           Polygon3DBox[{{1078, 654, 780, 1295, 909, 910}, {1077, 653, 779, 
            1294, 907, 908}}]}, 
          Annotation[#, 
           "Charting`Private`Tag$120553#1"]& ]]}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0sdKHWEYBuDfXqPZqtgWGntFRFAQIvaNQhAVOZIgYmxbdS0ouldwa90b
b0C9AWtiN7mBkAuI+gy4eOd5P+ac8/0znOKv84NzcSGEdSlXol7m8srmhBA+
stHcoRfqTfqgXhPd19u4kxhCi96v7+tt+qh+oLfraz7/3fxZ39MX9SOu8pSb
vOAe//CI/3jKLb+R43u9cmHuYqGUxIdwaS7lFT/xOjo7f0bPwl+s4A0rWSW3
ejXvWMN71vKBdXxkPZ/YwOdoh7Pk2dknv83dLJJMZzs3v7h/wr/8wWfu8owb
POYKD7kQvS9uy5S+yhEusY8zbGWM1RxgAZftSrCzR7LNncyXeckyz/IDp6Nz
cYoZnGQ6J5jGb0zlOGOSoo8xmaNM4jCtC0O0PnyhVxFyDf/f/ydvc647mw==

         "]]}, {
        Directive[
         GrayLevel[0.2]], 
        Line3DBox[{823, 1182, 1183, 1154, 563, 1186, 1197, 1198, 1180, 1501, 
         1037, 824, 1297, 1038, 825, 1298, 1039, 826, 1299, 1040, 827, 1300, 
         1041, 828, 1301, 1203, 1394, 829, 1302, 1042, 830, 1303, 1043, 831, 
         1304, 1044, 832, 1305, 1045, 833, 1306, 1046, 834, 1307, 1047, 835, 
         1495, 1155, 1048, 1156}], 
        Line3DBox[{836, 308, 1158, 1204, 1481, 1157, 339, 1199, 578, 837, 
         1308, 1049, 838, 1309, 1050, 839, 1310, 1051, 840, 1311, 1052, 841, 
         1312, 1205, 1395, 842, 1206, 1396, 843, 1313, 1053, 844, 1314, 1054, 
         845, 1315, 1055, 846, 1316, 1056, 847, 1317, 1057, 848, 1318, 1058, 
         849}], 
        Line3DBox[{850, 1187, 1126, 1160, 1207, 1482, 1181, 1159, 1208, 1496, 
         851, 1209, 1397, 852, 1319, 1059, 853, 1320, 1060, 854, 1321, 1061, 
         855, 1322, 1210, 1398, 856, 1211, 1399, 857, 1212, 1400, 858, 1323, 
         1062, 859, 1324, 1063, 860, 1325, 1064, 861, 1326, 1065, 862, 1327, 
         1066, 863}], 
        Line3DBox[{311, 229, 801, 264, 230, 1483, 864, 1213, 1401, 865, 610, 
         866, 1328, 1067, 867, 1329, 1068, 868, 1330, 1214, 1402, 869, 1215, 
         1403, 870, 1216, 1404, 871, 1217, 1405, 872, 618, 873, 1331, 1069, 
         874, 1332, 1070, 875, 1333, 1071, 876}], 
        Line3DBox[{890, 1074, 1337, 889, 1073, 1336, 888, 634, 887, 1411, 
         1223, 886, 1410, 1222, 885, 1409, 1221, 884, 1408, 1220, 883, 1407, 
         1219, 1335, 882, 1072, 1334, 881, 626, 880, 1406, 1218, 879, 774, 
         1131, 878, 1484, 1130, 1189, 1129, 1190, 877, 1497, 1128, 1161, 1127,
          1200, 1188}], 
        Line3DBox[{904, 1075, 1339, 903, 650, 902, 1420, 1231, 901, 1419, 
         1230, 900, 1418, 1229, 899, 1417, 1228, 898, 1416, 1227, 897, 1415, 
         1226, 1338, 896, 642, 895, 1414, 1225, 894, 1413, 1224, 893, 1292, 
         1412, 1133, 892, 776, 1163, 319, 891, 1502, 1132, 1162, 336, 1191}], 
        Line3DBox[{906, 1193, 1194, 1166, 1185, 1498, 1076, 1184, 1134, 1167, 
         1499, 1077, 908, 1136, 1340, 1078, 910, 1341, 1079, 912, 1342, 1080, 
         914, 1343, 1081, 916, 1344, 659, 918, 1345, 1082, 920, 1346, 1083, 
         922, 1347, 1084, 924, 1348, 1085, 926, 1349, 1086, 928, 1350, 1087, 
         930, 1352, 1089, 932}], 
        Line3DBox[{931, 1088, 1351, 929, 1433, 1240, 927, 1432, 1239, 925, 
         1431, 1238, 923, 1430, 1237, 921, 1429, 1236, 919, 1428, 1235, 917, 
         1427, 658, 915, 1426, 1234, 913, 1425, 1233, 911, 1424, 1232, 909, 
         1295, 1423, 1135, 907, 1294, 1422, 1165, 1196, 1195, 905, 1293, 1421,
          1164, 1202, 1201, 1192}], 
        Line3DBox[{934, 1137, 1168, 1241, 1485, 933, 1138, 1169, 1500, 1090, 
         935, 1139, 1353, 1091, 936, 1354, 1092, 937, 1355, 1093, 938, 1356, 
         1094, 939, 1357, 1242, 1434, 940, 675, 941, 1358, 1095, 942, 1359, 
         1096, 943, 1360, 1097, 944, 1361, 1098, 945, 1362, 1099, 946, 1363, 
         1100, 947}], 
        Line3DBox[{949, 1140, 1170, 1243, 1486, 948, 1141, 1171, 1244, 1487, 
         950, 1142, 1364, 1101, 951, 1365, 1102, 952, 1366, 1103, 953, 1367, 
         1104, 954, 1368, 1245, 1435, 955, 1246, 1436, 956, 1247, 1437, 957, 
         1369, 1105, 958, 1370, 1106, 959, 1371, 1107, 960, 1372, 1108, 961, 
         1373, 1109, 962}], 
        Line3DBox[{964, 1143, 1172, 1248, 1488, 963, 1144, 1174, 1249, 1489, 
         965, 1145, 1250, 1490, 966, 1374, 1110, 967, 1375, 1111, 968, 1376, 
         1112, 969, 1377, 1251, 1438, 970, 1252, 1439, 971, 1253, 1440, 972, 
         1254, 1441, 973, 1378, 1113, 974, 1379, 1114, 975, 1380, 1115, 976, 
         1381, 1116, 977}], 
        Line3DBox[{979, 1146, 1173, 1147, 1491, 978, 1148, 1175, 1149, 1492, 
         980, 1255, 1442, 981, 1256, 1443, 982, 1382, 1117, 983, 1383, 1118, 
         984, 1384, 1257, 1444, 985, 1258, 1445, 986, 1259, 1446, 987, 1260, 
         1447, 988, 1261, 1448, 989, 1385, 1119, 990, 1386, 1120, 991, 1387, 
         1121, 992}], 
        Line3DBox[{994, 1150, 1176, 1151, 1493, 993, 1152, 1153, 1494, 995, 
         1262, 1449, 996, 1263, 1450, 997, 731, 998, 1388, 1122, 999, 1389, 
         1264, 1451, 1000, 1265, 1452, 1001, 1266, 1453, 1002, 1267, 1454, 
         1003, 1268, 1455, 1004, 739, 1005, 1390, 1123, 1006, 1391, 1124, 
         1007}], 
        Line3DBox[{1009, 1269, 1456, 1008, 1270, 1457, 1010, 1271, 1458, 1011,
          1272, 1459, 1012, 1273, 1460, 1013, 747, 1014, 1392, 1274, 1461, 
         1015, 1275, 1462, 1016, 1276, 1463, 1017, 1277, 1464, 1018, 1278, 
         1465, 1019, 1279, 1466, 1020, 1280, 1467, 1021, 1393, 1125, 1022}], 
        Line3DBox[{1036, 1179, 804, 1035, 1480, 1291, 1034, 1479, 1290, 1033, 
         1478, 1289, 1032, 1477, 1288, 1031, 1476, 1287, 1030, 1475, 1286, 
         1029, 1474, 763, 1028, 1473, 1285, 1027, 1472, 1284, 1026, 1471, 
         1283, 1025, 1470, 1282, 1024, 1469, 1281, 1023, 1296, 1468, 1177, 
         1178}]}, {
        Directive[
         GrayLevel[0.2]], 
        Line3DBox[{341, 795, 564, 1501, 342, 796, 578, 370, 800, 1496, 593, 
         385, 771, 1483, 608, 400, 773, 1484, 623, 415, 776, 638, 430, 1422, 
         779, 653, 1499, 445, 782, 668, 1500, 460, 785, 1487, 683, 475, 788, 
         1489, 698, 490, 791, 1492, 713, 505, 793, 1494, 728, 520, 1457, 743, 
         535, 1469, 758, 550}], 
        Line3DBox[{343, 565, 1297, 344, 579, 1308, 371, 1397, 594, 386, 1401, 
         609, 401, 774, 624, 416, 1412, 777, 639, 431, 1423, 780, 654, 1340, 
         446, 783, 669, 1353, 461, 786, 684, 1364, 476, 789, 1490, 699, 491, 
         1442, 714, 506, 1449, 729, 521, 1458, 744, 536, 1470, 759, 551}], 
        Line3DBox[{345, 566, 1298, 346, 580, 1309, 372, 595, 1319, 387, 610, 
         402, 1406, 625, 417, 1413, 640, 432, 1424, 655, 1341, 447, 670, 1354,
          462, 685, 1365, 477, 700, 1374, 492, 1443, 715, 507, 1450, 730, 522,
          1459, 745, 537, 1471, 760, 552}], 
        Line3DBox[{347, 567, 1299, 348, 581, 1310, 373, 596, 1320, 388, 611, 
         1328, 403, 626, 418, 1414, 641, 433, 1425, 656, 1342, 448, 671, 1355,
          463, 686, 1366, 478, 701, 1375, 493, 716, 1382, 508, 731, 523, 1460,
          746, 538, 1472, 761, 553}], 
        Line3DBox[{349, 568, 1300, 350, 582, 1311, 374, 597, 1321, 389, 612, 
         1329, 404, 627, 1334, 419, 642, 434, 1426, 657, 1343, 449, 672, 1356,
          464, 687, 1367, 479, 702, 1376, 494, 717, 1383, 509, 732, 1388, 524,
          747, 539, 1473, 762, 554}], 
        Line3DBox[{351, 569, 1301, 353, 583, 1312, 375, 598, 1322, 390, 613, 
         1330, 405, 628, 1335, 420, 643, 1338, 435, 658, 1344, 450, 673, 1357,
          465, 688, 1368, 480, 703, 1377, 495, 718, 1384, 510, 733, 1389, 525,
          748, 1392, 540, 763, 555}], 
        Line3DBox[{355, 571, 1302, 356, 1396, 585, 377, 1399, 600, 392, 1403, 
         615, 407, 1408, 630, 422, 1416, 645, 437, 1428, 660, 1345, 452, 675, 
         467, 1436, 690, 482, 1439, 705, 497, 1445, 720, 512, 1452, 735, 527, 
         1462, 750, 542, 1475, 765, 557}], 
        Line3DBox[{357, 572, 1303, 358, 586, 1313, 378, 1400, 601, 393, 1404, 
         616, 408, 1409, 631, 423, 1417, 646, 438, 1429, 661, 1346, 453, 676, 
         1358, 468, 1437, 691, 483, 1440, 706, 498, 1446, 721, 513, 1453, 736,
          528, 1463, 751, 543, 1476, 766, 558}], 
        Line3DBox[{359, 573, 1304, 360, 587, 1314, 379, 602, 1323, 394, 1405, 
         617, 409, 1410, 632, 424, 1418, 647, 439, 1430, 662, 1347, 454, 677, 
         1359, 469, 692, 1369, 484, 1441, 707, 499, 1447, 722, 514, 1454, 737,
          529, 1464, 752, 544, 1477, 767, 559}], 
        Line3DBox[{361, 574, 1305, 362, 588, 1315, 380, 603, 1324, 395, 618, 
         410, 1411, 633, 425, 1419, 648, 440, 1431, 663, 1348, 455, 678, 1360,
          470, 693, 1370, 485, 708, 1378, 500, 1448, 723, 515, 1455, 738, 530,
          1465, 753, 545, 1478, 768, 560}], 
        Line3DBox[{363, 575, 1306, 364, 589, 1316, 381, 604, 1325, 396, 619, 
         1331, 411, 634, 426, 1420, 649, 441, 1432, 664, 1349, 456, 679, 1361,
          471, 694, 1371, 486, 709, 1379, 501, 724, 1385, 516, 739, 531, 1466,
          754, 546, 1479, 769, 561}], 
        Line3DBox[{365, 576, 1307, 366, 590, 1317, 382, 605, 1326, 397, 620, 
         1332, 412, 635, 1336, 427, 650, 442, 1433, 665, 1350, 457, 680, 1362,
          472, 695, 1372, 487, 710, 1380, 502, 725, 1386, 517, 740, 1390, 532,
          1467, 755, 547, 1480, 770, 562}], 
        Line3DBox[{367, 797, 1495, 798, 368, 591, 1318, 383, 606, 1327, 398, 
         621, 1333, 413, 636, 1337, 428, 651, 1339, 443, 666, 1351, 1352, 458,
          681, 1363, 473, 696, 1373, 488, 711, 1381, 503, 726, 1387, 518, 741,
          1391, 533, 756, 1393, 548, 804, 805, 806}], 
        Line3DBox[{549, 757, 803, 1468, 534, 742, 1456, 519, 727, 1493, 792, 
         504, 712, 1491, 790, 489, 697, 1488, 787, 474, 682, 1486, 784, 459, 
         667, 1485, 781, 444, 1498, 652, 819, 818, 778, 1421, 429, 637, 817, 
         816, 1502, 775, 414, 622, 809, 802, 1497, 772, 399, 607, 808, 801, 
         815, 814, 384, 592, 1482, 807, 813, 812, 369, 577, 1481, 799, 811, 
         810, 340, 563, 820, 822, 821, 794}], 
        Line3DBox[{556, 764, 1474, 541, 749, 1461, 526, 734, 1451, 511, 719, 
         1444, 496, 704, 1438, 481, 689, 1435, 466, 674, 1434, 451, 659, 1427,
          436, 644, 1415, 421, 629, 1407, 406, 614, 1402, 391, 599, 1398, 376,
          584, 1395, 354, 570, 1394, 352}]}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJx0e3k4Vf/3r3moyExKQiKZmxS9t6ikkjkalKgolSKUQkKGUClDJTKGFDJU
wjJnznA45nk4OOdss8x3fz6333Of+733+9d5ntdzzj77rPdar/Va63W2hJW9
0VUmBgaGblYGBmbiVdvXa21tDcc8cA8tLuOkAkOVldUr+myYavytXy8oo1gZ
Lv9mS0U/aGESLrt4mDDmtUBD1V39mD6f2lU/szEIfxohF2S6gCx2a0zm5rVj
qDtAppuPBkHMEq1C8VNIT2LDG98uElZTUkK21aSD3bTyjJQIDc3tvG5iw9qA
OWwjb/nTSoc6ewnFwZ8jyJk5UUjsSw0msD9tKkcJh3eMH6w7VwfQqpfi2VdQ
gdnY3x62u4oDazr53JbDfchLwGcff2EZdnbx/I0uPxxmPqxxcZh0IzL59SaX
KyVYteQfhjsxODj9aNC4uK4DsXlIy1S7FWHTUQzsMpk4/DHQ7Ci2bkVqVUqj
Ke2A+UZsTjItxOEi2WLEYm8L2nDsrdYljXys7VaqpU0VDvI3YprWWZGQtFa1
kTHzT6ywNU34SCMO/kashaebG5G8K1ejnugPrP4Ev45PKw4cT9anWjxuQAl8
k6v/xNk7PeyVx2RGgcE0hok58WCxLxnDKO1DWKq/RE3NpRE4Hm5n0ufKhi0V
F64vE+3Abu2sF+VdoUIUSfCKXN8S2tebH7t5fRPm8ASkpwLpMGl6Ic0jbBpN
HBOTfyZZi7UMajnPy+KgEW/PVDtPQ6KuroZHfX9houeT+G/cwyFk8JWT224K
6mSZ0vPMLsH2Mpy0OR2Fw7RUVUzp0UGkxxP41GqqEPtN1tLt/4ZDR3s3/dbt
PtT+855Rw7d8zGWjy8P3FTjIng34ZfayG6X2xfgK3cvF7llXX5Im4TA7uVb+
bW8HytSy1uVr/oaptFx4frMTh/OB56leXq2Iv1v729sv2VhzT92XF/041Ayf
3K2v14JKuvti/vRnYoGhz6vQCA63Az+W+d0job0vKbxOFl8x97K0D4NjOGxj
/sTZP9CIovON6EobM7D0Ike3KhoOmj1m8tyBDcizQmb5nzg3yV6rfrGpqGCp
0FV220VxzLhajn1MqRO7JspxIyOXClmsOe3GMeuxgshSXk73OkxWdaxPVgAH
npz3uZUDK+i1yuHtXEmlWCx7dVH0ayLfxM/sfY7NILJLIn/STsCetL+TEyjB
IWH15l2WQDqyof26v3/tOzZ/rupxO3Hu8U4sj0ofUxB3dSCXS2cWdtHe6VLR
IA4rdQ8ZJhwG0WDCwXOvhzKww9c+r82M46BamSKw4Vkfqttohy6cScMe336m
Gj+Bw4W5UveWb91IrJszo6rrE2Yu9Da4YxqH7NP0wSaDDtTHs3BdTSgZ8z46
KbJzDoczxw5KGoa3ouCaO2pvfidicmfCI7vmcVhH9tTae6EFcYe13a4fjceO
qwXX7FzAIdZxqpH1MQldfPQpJ/x0HMaREHlLfhGHjEsH99GojShq4zfqGi0G
S72xkr1A4La24SJ6rxoQ8/UNeqtEnBm1FPao5s0V0Jybxw+2m2A8TMZKVWEf
MXP2qvV6xPdeS9lnoVHAjenTbFzfvgvHynNdIhpXcNgvV8HpVbqKpGyfG5g+
fI5t2RWzl2MNhy6X4fIKrxk0PfXkQX2kL3bWyfLdPQJ3SDEPESyno3s7/xj+
GXiCbcharUgk8BK34jNRURT0ZWbYa/0jDyxgm/76YgL3G+XYoek9iOIOyV/7
tOyKpX4QfthI4Ok6q0NzoX1ovN6Icet7F+yTivyOrn/eX8Zt4VrejRLY7Efv
rdzDTOnvnQcJ/EbzlWyx8x3ojevojq2DDlhu0krGKIEzePouNkS1Iu91Ny+4
yt/FqvkWXtAIvMMwpa/1cgv6vv/pqwOP7DGJ7IwnEwReIItxXfQmoUuh56QO
8NzCCpa0a6cIvNewQcF8ohH9pq05/1q+gf0+nRU1Q+Cddo35nGENaL3srkUi
nyGXiaVAf2NZQXNSgGungRSm+9omve0LGdzyFJ4+yKXBU24OmlH4BqzQrTbC
jqESvE6Qvu21wiH8k55qu+Iqqug5uG24tRCyUs09f37HQSDaYD77zAy69/LR
JsaLP0BcWubLFzLBt5sbVZqj6Shq+gH/dZMs+H3du3zbMA79htvFlwIoaHFl
f7bKbDpMbRbtZaQTcbjuFdF9fxAdH9PvvSz0GfZaaE6XTuHQHUH3rAruQ/ec
rvVtcE6G4dPahl2zOFCdTzt15nWj2iOdz43jEoH1IKPgCpEn5eJSc+dNOlDv
bPDVEst4mK7hOPmEyM8l88MJg29aEfd1ra1yvrEgFfzFJpbIQ+sP9zikLxK8
If+Z5fzyB3AYEIlyW8KhpY2v2cuThGzeFA1ZXYiGmdZYbdllHGrHXcs30RtR
KNv5oOvi70FvRe9rGoHnnWSrPfS6AW33+foPP0P+OVOlI5TMAtt7A1GYFh/2
m94opBQ9CO3rhk9uuU8Bg6H1z1382DFX8RXfXe2tEHLUJH67Gw0OOZtGmV1Y
RqGdMTc26zdASf67D9l1dHh9pGUxuXAaWZ06zBtrXQX7NnzazmyAQ1Vl+slz
YnR0c/n+qumxMohP1y3jCsYhcSH52X4dCmJlO6s0WFsEr9YS7C3ScUiOTS0x
NxxE64OrcpLeFMDORcqWI2XE79or+KnCqQ9VJrpwzzbkQsIVTvFxoh8FHhHx
1XzXjTa1dNuKdX+DBlWth4YED499ETTI0uhAMXv7PRM9sqGSo6194wAOOlV/
zKL9WlHZAyUlq+BMqExMxTdScFB5w/BExrAFPRQq0TLGM8AiKXlrD8FX0ZjC
9scuJDQf+Non7Xk6KN3NWW4h8mF14092teFGlPech2mh5AtgRcueqpM46GXg
drSgBvR9w91/9AbsCuiK1+VNKUi4zOb7mcKO3Txsw7L36ChwJL3xL4oZADs1
/vZHfUwYS/ChAj/DPuiYKrMLo4xBXlbUW+6+BURaGDhjpNEGovumbI/Z0kAj
MuhiW/sUarv3QGrqbRNIqk2XyjnTgecT01XySRraeC/xpdvob0iMsNhitEIH
0p5vsp3kEZQieNXPva0KpO6ZXAZdHASP+V0O2jiI0p6/2Ky14xcAJcd59D7B
e9IsDo0n+xDpPtdrF9NS4KXFb14IxwGJLJY+t+pG2wcybazEi8Fcjk/e9TMO
Wl9Jm5MFOtCfkP4PdmaF4MbjMDuXh8Pwl2IffbtWJEtdXl4rzAeX355bHxL9
VG63TgiPegtyL8q1q9b7CYHzbm1HGwj9cGL7KYdrJPSsPzEn6MAPCOKX95Qk
+guu5TH1q7URsZ97cNPgzjcgt2Z4h3cR/DMdt03GqwGtY874N86589tWfC3j
Clb3JA4WljFitufVufhzxqHj7ePOTIZeSKw4LjjzaxXtf0E5cGBqEBi1N9Dk
VSggr3cvBTsyj27Yz5x6s9oDCqx2d/uJz6mzyWUslE6iHX41rsK32iBY68R4
iQUNxKpGkuUQFSV+LOkkTZLgpt+xkmENOkixvdeq1x5BLqw/56WhAX7ZrZQX
FdDBVsG9xD5nAJWsG+mj5dVBcvDKWV0eot6TWouM+PpQ2Z0JNiOBalh37gvP
62M41DNVdOoIdKOrY8Exe5UqIKOIJul4EweDkrg23q52VMh5cbMguQwyh84s
dPvisHy2keKk1Yp+vfLblzFSAvt/+xuYReJAEQoaVd7SglI/KKtvOl4Mi3ds
mphTCd5zE+gMPk1C7bYhOdHDhbDngXL6MYInu1Qll6hljWjxdat0002AOt0y
+/XFOBjXzfoz32tAFku1/8Y5ytkttbolqqDgcP0HDt1lFBHC/TWJnwa3piay
dX+0Q2HEae0XmQtou+WE7tPnI1ApZC916+MQfF/HpHG+aQY96JXW4Kjqh7c8
cUflR0Yh0axDOvndBNr89JT0x9BueB1mdHbdFioI9bEMAcc48tFMOX84oA3u
i2i8sjejgeCF6Kfar4aRxosMZZnGZlA8o2y2XZAOTmUMwWm6A6hCadT2+1oj
UA7t6PwWTIcrVQIdYtW9aIeELvlqTT0MmBRs/NVLhzDmS+RLX7tQuvzWx+yC
daB7aNkvSBQHkb4j6dzh7cjwebly6P5qWD+66UjKERzuV2xPK+RuRQz3xczk
yBUgyXSj7vAVHA46KgbNzTSjG22T7a0t5fDLkP+l/yMcfG1zVsSUSYhDaUKg
VaIMjORMecOeE3qDKX+B/LkRqcczn+1PKgEppSqxGkKX0nquvIu3bEBWT7r+
jXPv/vWJLe/eFBzbdeXczKN5xLVwUSZ1iAZdG56CbkMLiMzLrDVMzqJXUgIe
m++MQttt3dZ1NwbAclX2OuXTFDpy8Y+KDtcQeIYIJydsosAdM4lC9xE6Gs8z
7Trs3wdb2e4dtykdA0upTUirYBR1SRQrZmZ3QboS148WMyqcTzpX+q5uCPUt
qKsnvW8DHTbNpj3GNNDTsrhhVtuPUp/mOaM7LSDKV3mY+Q8NFPZfUDx5vxdZ
1j5r3E9tAsr7Z9sXbOmgfZflgAzWhXSaEvvNBhsgSOxqtMUPOqipqWgsaLcj
Xp7kbq0D9bBsIrj15gwdDkR9/sDcQEab9oWLtiXXwrsDZ0eWtuGwELAnnVLW
jLK9UAa/fjWc68QfWmnjcERYS/jBehK6cd7isdTJShDN3BbkchGHzHHulrIX
jWhJ4kxkV+Av6GsJE5Qh5oLKrYnTe3Qb0O3K4X/jXPL+6B3VodAC/ar3fzgE
ZxDlkzN93o4O3i1PKwfbmuCAQqKRq/A0GpPJygitGYPITQyhBY/6QDEp+NTD
hgmUHrBmdq57GNzGFPeoWQ3D3Hrb54xZVHTRSTUlyHkAZjOPHQy4Ngrpj+zD
f92ioPV8iyz6P3pB8fN97v3Hx0Goy9syeoXQFZb+8qfFumA+/qztEQ8qMQ/u
V793tB8pGg5UuH9qA6M6Tg1FAxrEeePL3Ft60bWzh50/DLUAa0V3bkUfDWwV
4ZdkfidiMXQuKo4hwfVLBzMTT9Ch2mjR3HioDe3Uesl6oKgRYmqfa1hE0KGp
7+ZVpQAyqu0KNY5XaID0tat8V5rocOmjCC32eTNySzjtKfn5N1gnf4pVZsRh
b+L9jRx9TcjAiWbvfqkWjDTjsqylceD8KElfud2IaCYdK22XquFwk0mBixbB
E8lSdcMKDai4lPpvnLc1+g2dEX9VICshVzvrP4mYNszYXCunw6ETjkat/g1w
hHZRQaB7Ag3XnRI8VzsO+xRrmQ+n98DTIbutow/o6HWXY8OoEQW4JZvWM1UP
QstvS15S8hjKH/uRkC46BPbl34ZGuCjwUZbhjonkCOLO4jl6wqofBvjKmHer
jEHg1XfzUzsG0eyk2CqDbC9M3O2OV48ehyCTxLLf2X0o6HaqGP6lE9bz6PCr
vqOC8z7VSOW7PUjF5dxoZ3YbNNzEPlD0aBCisDY8ptiJ5sSO7tqvSYb2I+8a
jtXTQMKKKyX7URta8TaucFRpBv/518m/VYg8unaU47g6GVVozrSRHZugosrQ
5/YjOmT1TPHXGzWjP+G8/qNzDWCy9zhnUg4dHAvJOiijCe0QPu6++Us9JPrT
c/oG6bCe4b1m/fFG9D1Mx/aF+G9YtQs3k15H6EntgOEp7gZ0sW3i3zibF+G2
vAsvCvzfLqp5SeKIt4/zLo2VwLk4E19Z/Yb2WJnHu5XoyG926RZzMBW+aeR6
6w50whoT28lLFeNIYSn7hbD7KOi4CmEpZgPwNLnRJKGWgrzG3aPo7sMQcr7K
cEvxMNBT/XQODgyh3ku7JHTaBqCZkm+dvmkULI4HyQ3pD6DczIm52Hd9wH/q
danx9zG4mzl3s0SiD9n0dppVPOiBisQoem3nOKQyDQZTo7uRyPWzJ4zPd8IV
4+EzjOlUGG/7wMYd3oFKvY39x/Pb4LvhpT6pU4T+WXczGNa3IdHMvRkafmSA
n6uLksU0CKp6yHxhqAVN888kLCU0A8P6n1liYnTQrTWibOdpRtdeMwTsZydB
5APdav8rdKBpfA8Pf9SE3BN7vR9EN8KvbSI7vN/TQbDDwefVViLOmGrY8pUG
iN+YV/GhmugjlCG9cGo9ii6a/jfOT9nnnzB5BxdESNs6ia6MI+nDfHZSe4i+
e+GdznfLGsh7p9tdfWIcjeg849GQoEGSPcvNQbd22JrW+PSu6ygajj/pHms/
Bglxp+K5OfrhzofYEF3xEaSuEosHpI6AimptRprvEJidWPhDyhpEthuPnsiU
HALJvUVW3WwUiNhnu9XxUT9K2WGDY+P9YHO43ny6bhR8RoKeSgT2Imfs8evz
bH1wyEBH46rIONFKxXavr+hCT0qesDs0d8Omsy6xEeuoUJz1Umthvh19Up4c
r93UCZUF6ps3F1JBRL6JmfN1KxI7IxtzobQNfktM3/pxguD/jLyJh/4tyPLi
U6euYjKkZ0hvfZhDA8qP7zvOV5CQdmyP4yW2FqgyjteJXk8H142Rm0O1m5C4
tf9A2xMSXFsVSxvSp8OJhx9N4iYakEP/5ncfFZsgLfOnpZUvHVith8SFftWj
Z8Oz/8Y5/QoN4/n2rMDJL7Dzqd0oKp61m84/g4PCOY+dof2VUGPU/phviIJa
1xKVM1/RgGnL00L2263A51nsXu4+gh4tTMWw7hmHemUE/O29wGEvsLQhcgjd
eiTowZtKgd28j0gUy0HYe3OZ0fTNANKxKnQ5rz0Mp0JZVq4tD8MBJibf22l9
6Je3a5PspkHoNmXe8nGYAqJ7k+9cpvcgqUOtH0v29MOydeQ9qgFxnini3DXU
TnRqE5uXdkgveFmoLKxdGge6+SPDEeN29Ev9ocxd426wPsFUPK1ABf9EY01h
4VbEk3kf5x/qgIM/gmzpNVRIbnovkinbgoQKHJRiKtsgaif39xe6NMDf3aqU
f0RClKKrHN7TZMiMig3LTqVBwMAO81y2JrQaX77VzqwFOCGTnrBMg4M/PWQv
QgMynTMlc1BJIO+SGzZyiA5cTmTjrKh6tJ989bGQJQ3j7jkweNaqDQpGGN3z
r3Ng3lOegZ6qY9iBsiGPW5b9IHD8ZqJDKi/W7cUjUa7djaWAs+tOVSpQup7o
Mm/djJlQ12cVajVDKZv65jJFOpiPWSbsZBfDvk/xXHZtywc1l4+nxQn9n2XC
+vyVJQvGWdLhOzdGAeafxoH1/INwuCbnmYI+PxZbUaS+x6UVnozdaqp9SQOt
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
Fr8wx7kOu5uZu6xgXAP7acWch3fgc+R6csSy7SIKZueMi7w+CtNq74IL3AaA
+qRc3tmSHTMq2KySNN8KL1+lVJKeUmCcQcna1XkR3aX32356v42h99uHzbnn
2bf2QSdn2S/F9eNw6lzgpNL3BbSf3odZ6H1Ylt6HScr6N7kmaPBE12pb5PgP
2KtWuxDItIK6ileqVPHnp4bJ+91e/Hkq27hXNjN6EXHzs701jx2Gm5s6DtYF
D8Ou5rghLfcZpJ6++0UZAZ+j7YolO07mgABR/YfxwwWUMn/fWforGbJtowJY
XDsh50B9dfDMLOqR54ut6hqBPVZKaew6Q/C1dC9x/akpFGm01CSL4xKPzMbg
y0kFsNfLUGuUZxbNxnw5tUoiw/j0OQPGRx3QWM08SVaYRvWNUp0sOO/Trx/+
6HViEGiq93MUH0ygILovaDzdF/QU3RfUnx6n0eNq9Lgw3S/0ON0vNJvuF8pH
jxvQ4+n0+Kdx16atRHwen7/DcuNtNijv7ZKy/TaBlpL+LPS/pUHxQ7YvCz4l
EMQUUJHuMoE6aItIepUCKyWeTGcvtMBJQ46gHRY0xLH/T1KLGgV+POcK3NzT
BqPMcRZ9EVQkkhTE/OsVGXvy8YDen7VOoPQzXpsd4MA+0PcuNv61d+F+bEh4
L3cqRvx8Ks8Pn8sn9ax3t7xtQJu9d768dbsXi7R3PS/7chzqyDXqKw82YN8T
L4dtMCVhznW/VRVTB2FWYFnAcYQXu1QtLdFk+hvTkP3hREiggVCk5p+f3ayY
Ktnh7OrrViyzwRAT96aAxJftSnEWolh6KkW1s2wEvq/b4+RoNgS/aC/5Kj/w
YSPh3lUNp8gQNzb8UnOuC1T7piTa6jdi4pHmGUkSeH+7GFBkjtdn/F33k2K6
jBhXCcmGe5ECAZdNJUPut0DoK5OoTe9ZMBWr9d824vVx6rAKQwVeL9Vlh4dz
Qlb/1+dznu7zKUv3+XxD9/mcoPt8Mkz/j88n6dDNR/bbacB7eSMp70ENZJjo
7bE7v4yUkL1emegYPDs9tvOYYz+YN0yflcyaR57pDZMORngdXolWyt9UAe1H
mSMuCy0gfwZ+zUG83wVbc7d7P+wFmUDtMRveWXTQNg25vqZBo+sOw6PlJcDW
48hJmppBgfR6q6HXmzq93sbKrTm33CfDqywJ07iHXcDUuLM4oOf/+9Zq0+st
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
U2zY/wPX9n5p
      "]], {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> {{{0, 0, -1}, {{0, 2, 4, 6, 8, 10}, {1, 2, 3, 4, 5}}}, {{0, 
        1, 0}, {{0, 2, 4, 6, 8, 10}, {-400000, -200000, 0, 200000, 400000, 
         600000, 800000}}}, {{-1, 0, 
        0}, {{1, 2, 3, 4, 5}, {-400000, -200000, 0, 200000, 400000, 600000, 
         800000}}}}, DisplayFunction -> Identity, Axes -> True, 
     AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, AxesLabel -> {
       FormBox[
        TagBox["stocks", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["opponents", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0], Selectable -> False], HoldForm], TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     Boxed -> {Left, Bottom, Back}, BoxRatios -> {1, 1, 0.4}, DisplayFunction :> 
     Identity, FaceGrids -> {{0, 0, -1}, {0, 1, 0}, {-1, 0, 0}}, 
     FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.2]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 9}, {1, 5}, {-211499.91675000486`, 742499.8788214333}},
      PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Income", "(", 
         RowBox[{"stocks", ",", "opponents"}], ")"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Specularity", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Lighting", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.716568238760436*^9, 3.7165683340814304`*^9, 3.716568911167865*^9, 
   3.716569204764946*^9, {3.7165698847425528`*^9, 3.7165699055255914`*^9}, 
   3.7165708958911185`*^9, 3.7165710743313932`*^9, 3.7165711564550204`*^9, 
   3.7165712291217856`*^9, {3.7165715740854087`*^9, 3.716571599547553*^9}, 
   3.7165717969835553`*^9, {3.7165718292384553`*^9, 3.7165718317229424`*^9}, 
   3.716571864797763*^9, 3.7165718949109154`*^9, 3.716571927097189*^9, 
   3.7165723724172935`*^9, {3.716572563478731*^9, 3.716572572942754*^9}, {
   3.716572661921714*^9, 
   3.716572674253502*^9}},ExpressionUUID->"bfc282c5-e50b-45f1-8924-\
fcf018708477"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Income", "[", 
      RowBox[{"stocks", ",", "players"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"players", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Net Income\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"stocks", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716568357551649*^9, 3.716568385987912*^9}, {
   3.716568453279945*^9, 3.716568453579996*^9}, {3.716568500161267*^9, 
   3.71656850046115*^9}, 3.7165685334843693`*^9, {3.7165685987435665`*^9, 
   3.716568650693119*^9}, 3.7165692277159805`*^9, {3.7165700830051746`*^9, 
   3.716570101672698*^9}, {3.716571102231244*^9, 3.716571142200219*^9}, {
   3.71657124957196*^9, 3.7165712663260794`*^9}, {3.7165713193134923`*^9, 
   3.716571328418434*^9}, {3.7165714217450233`*^9, 3.716571471923431*^9}, {
   3.71657162518493*^9, 3.7165716656611824`*^9}, {3.716571737260721*^9, 
   3.7165717578179903`*^9}, {3.7165726080815287`*^9, 
   3.716572645767707*^9}},ExpressionUUID->"81a89026-67ac-4a18-ba4f-\
be11f8c9d501"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`stocks$$ = 5.38, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`stocks$$], 0, 9}}, Typeset`size$$ = {
    432., {109., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`stocks$118798$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`stocks$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`stocks$$, $CellContext`stocks$118798$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`Income[$CellContext`stocks$$, $CellContext`players], \
{$CellContext`players, 1, 5}, PlotLabel -> "Net Income", AxesLabel -> 
        Automatic, PlotStyle -> Red], 
      "Specifications" :> {{$CellContext`stocks$$, 0, 9}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.716572594801156*^9, 
  3.7165726463887897`*^9}},ExpressionUUID->"da2fdd7a-f212-47bb-9145-\
64dd3be62ef9"]
}, Open  ]],

Cell["\<\
Conclusion: As long as there are more than 2 opponents, you are likely to \
make more money if you buy more stocks. So your best option would be to buy \
all 9 stock cards on the first term.\
\>", "Subsubsection",
 CellChangeTimes->{{3.7165709633934135`*^9, 3.7165709729277544`*^9}, {
  3.7165722642433386`*^9, 3.716572310207138*^9}, {3.7165727168916245`*^9, 
  3.716572725894849*^9}},ExpressionUUID->"407de62f-39a0-4bb9-a5a6-\
08b66614475e"]
}, Open  ]]
},
WindowSize->{1536, 791},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 526, 11, 261, "Title", "ExpressionUUID" -> \
"7c3c1a7e-99a0-45ca-aa22-abf74364922f"],
Cell[1109, 35, 889, 21, 86, "Input", "ExpressionUUID" -> \
"90e820e0-c0b9-4895-8dc2-f5b0a1a747fe"],
Cell[2001, 58, 1073, 20, 37, "Input", "ExpressionUUID" -> \
"0bae6826-b654-4d06-8b27-a52751d52d29"],
Cell[CellGroupData[{
Cell[3099, 82, 899, 18, 37, "Input", "ExpressionUUID" -> \
"d8d9b0ac-3d86-41ec-ade8-f9f8a4bc9bfc"],
Cell[4001, 102, 118704, 2007, 322, "Output", "ExpressionUUID" -> \
"bfc282c5-e50b-45f1-8924-fcf018708477"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122742, 2114, 1253, 24, 37, "Input", "ExpressionUUID" -> \
"81a89026-67ac-4a18-ba4f-be11f8c9d501"],
Cell[123998, 2140, 1842, 37, 351, "Output", "ExpressionUUID" -> \
"da2fdd7a-f212-47bb-9145-64dd3be62ef9"]
}, Open  ]],
Cell[125855, 2180, 452, 8, 82, "Subsubsection", "ExpressionUUID" -> \
"407de62f-39a0-4bb9-a5a6-08b66614475e"]
}, Open  ]]
}
]
*)

